# SPDX-FileCopyrightText: Copyright (c) 2024-2025 NVIDIA CORPORATION & AFFILIATES.
#                         All rights reserved.
# SPDX-License-Identifier: Apache-2.0
---
on:
  workflow_call:
    inputs:
      platform:
        required: true
        type: string
      ref-sha:
        required: false
        type: string
        default: ''
      build-type:
        type: string
        required: true
      python-version:
        type: string
        required: true
      target-device:
        type: string
        required: true
      network:
        type: string
        required: true
      refname:
        required: true
        type: string
      default-branch:
        required: true
        type: string

jobs:
  build-profiler:
    if: ${{ github.repository_owner == 'nv-legate' }}
    uses:
      nv-legate/legate-gh-ci/.github/workflows/gh-build.yml@v1.39
    with:
      client-repo: ${{ github.event.repository.name }}
      client-ref: ${{ inputs.ref-sha }}
      target-device: ${{ inputs.target-device }}
      runs-on: ${{ (inputs.platform == 'linux' && 'linux-amd64-cpu16') || (inputs.platform == 'linux-aarch64' && 'linux-arm64-cpu16') || (inputs.platform == 'mac' && 'macos-latest') }}
      build-has-tests: false
      build-type: profiler
      use-container: ${{ inputs.platform == 'linux' || inputs.platform == 'linux-aarch64'}}
      platform: ${{ inputs.platform }}
      legate-gh-ci-tag: "v1.39"
      build-mode: ""
      python-version: ${{ inputs.python-version }}
      network: ${{ inputs.network }}
      setup-python-proxy-cache: true
      timeout: 25
    secrets: inherit

  upload-profiler:
    if: contains(inputs.refname, 'pull-request') == false
    needs: build-profiler
    name: Upload Legate Profiler
    uses:
      nv-legate/legate-gh-ci/.github/workflows/gh-upload.yml@v1.39
    with:
      build-mode: ""
      build-type: profiler
      client-repo: ${{ github.event.repository.name }}
      client-ref: ${{ inputs.ref-sha }}
      build-has-tests: false
      legate-gh-ci-tag: "v1.39"
      name: Upload package to Anaconda
      network: ${{ inputs.network }}
      pkgSubString: "legate-profiler"
      platform: ${{ inputs.platform }}
      python-version: ${{ inputs.python-version }}
      repos-Root: "legate-profiler"
      target-device: ${{ inputs.target-device }}
      upload-action: "upload-package-Anaconda"
      refname: ${{ inputs.refname }}
      default-branch: ${{ inputs.default-branch }}
      timeout: 15
    secrets: inherit

  build-legate:
    if: ${{ github.repository_owner == 'nv-legate' }}
    uses:
      nv-legate/legate-gh-ci/.github/workflows/gh-build.yml@v1.39
    with:
      build-has-tests: true
      client-repo: ${{ github.event.repository.name }}
      client-ref: ${{ inputs.ref-sha }}
      target-device: ${{ inputs.target-device }}
      runs-on: ${{ (inputs.platform == 'linux' && 'linux-amd64-cpu16') || (inputs.platform == 'linux-aarch64' && 'linux-arm64-cpu16') || (inputs.platform == 'mac' && 'macos-latest') }}
      build-type: ${{ inputs.build-type }}
      use-container: ${{ inputs.platform == 'linux' || inputs.platform == 'linux-aarch64'}}
      platform: ${{ inputs.platform }}
      legate-gh-ci-tag: "v1.39"
      build-mode: release
      python-version: ${{ inputs.python-version }}
      network: ${{ inputs.network }}
      setup-python-proxy-cache: true
      timeout: 180
    secrets: inherit

  setup-profiler-test:
    name: Setup test
    # Don't run GPU tests on linux-aarch64. We don't have enough test machines for this.
    if: inputs.build-type == 'nightly' || inputs.target-device != 'gpu' || inputs.platform != 'linux-aarch64'
    needs:
      - build-legate
      - build-profiler
    runs-on: linux-amd64-cpu4
    timeout-minutes: 20
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        shell: bash --noprofile --norc -xeuo pipefail {0}
        run: |
          MATRIX_JSON='{"include": ['
          RUNNERS=(
            'linux-amd64-gpu-l4-latest-1:gpu:gpu:linux'
            'linux-amd64-gpu-t4-latest-2-llr:gpu:2gpu:linux'
            'linux-amd64-cpu8:cpu:cpu:linux'
            'linux-aarch64-2gpu:gpu:gpu:linux-aarch64'
            'linux-aarch64-2gpu:gpu:2gpu:linux-aarch64'
            'linux-arm64-cpu16:cpu:cpu:linux-aarch64'
            'macos-latest:cpu:cpu:mac'
          )
          TEST_CONFIGS=(
            'Legate profiler test:profiler'
          )

          for RUNNER in "${RUNNERS[@]}"; do
            IFS=':' read -ra RUNNER_INFO <<< "${RUNNER}"
            RUNNER_NAME=${RUNNER_INFO[0]}
            RUNNER_TYPE=${RUNNER_INFO[1]}
            RUNNER_DEVICE=${RUNNER_INFO[2]}
            RUNNER_PLATFORM=${RUNNER_INFO[3]}

            if [[ "${RUNNER_TYPE}" == "${{ inputs.target-device }}" && "${RUNNER_PLATFORM}" == "${{ inputs.platform }}" ]]; then
              for TEST_CONFIG in "${TEST_CONFIGS[@]}"; do
                IFS=':' read -ra CONFIG_INFO <<< "${TEST_CONFIG}"
                CONFIG_NAME=${CONFIG_INFO[0]}
                CONFIG_SCOPE=${CONFIG_INFO[1]}

                # Don't setup python proxy cache for the aarch64-linux 2GPU
                # machines since they can't reach it over the network.
                if [[ "${RUNNER_DEVICE}" == "2gpu" ]] && [[ "${RUNNER_PLATFORM}" == "linux-aarch64" ]]; then
                  SETUP_PYTHON_PROXY_CACHE=false
                else
                  SETUP_PYTHON_PROXY_CACHE=true
                fi

                MATRIX_JSON+="{\"runner\": {\"name\": \"${RUNNER_NAME}\", \"type\": \"${RUNNER_TYPE}\", \"device\": \"${RUNNER_DEVICE}\", \"platform\": \"${RUNNER_PLATFORM}\", \"setup-python-proxy-cache\": ${SETUP_PYTHON_PROXY_CACHE}}, \"test-config\": {\"name\": \"${CONFIG_NAME}\", \"test-scope\": \"${CONFIG_SCOPE} ${RUNNER_DEVICE}\"}},"
              done
            fi
          done

          MATRIX_JSON=${MATRIX_JSON%,} # Remove the trailing comma
          MATRIX_JSON+=']}'
          echo "matrix=${MATRIX_JSON}" >> "${GITHUB_OUTPUT}"

  test-within-container:
    if: github.repository_owner == 'nv-legate' && (inputs.platform == 'linux' || inputs.platform == 'linux-aarch64')
    needs:
      - setup-profiler-test
      - build-profiler

    name: ${{ matrix.test-config.name }} (${{ inputs.platform }}, ${{ inputs.target-device }}, ${{ inputs.network }})

    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.setup-profiler-test.outputs.matrix)}}

    uses:
      nv-legate/legate-gh-ci/.github/workflows/gh-test-within-container.yml@v1.39
    with:
      build-has-tests: true
      client-repo: ${{ github.event.repository.name }}
      client-ref: ${{ inputs.ref-sha }}
      build-type: ${{ inputs.build-type }}
      name: "${{ matrix.test-config.name }} (${{ matrix.runner.device }})"
      target-device: ${{ inputs.target-device }}
      runs-on: ${{ matrix.runner.name }}
      has-gpu: ${{ matrix.runner.type == 'gpu' }}
      test-options: ${{ matrix.test-config.test-scope }}
      platform: ${{ matrix.runner.platform }}
      legate-gh-ci-tag: "v1.39"
      build-mode: release
      python-version: ${{ inputs.python-version }}
      network: ${{ inputs.network }}
      setup-python-proxy-cache: ${{ matrix.runner.setup-python-proxy-cache }}
      enable-core-dumps: false
      profiler-artifact-name: ${{ needs.build-profiler.outputs.artifact-name }}
      output-build-type: "profiler-output-${{ matrix.runner.device }}"
      timeout: 90
    secrets: inherit


  test-without-container:
    if: github.repository_owner == 'nv-legate' && (inputs.platform != 'linux' && inputs.platform != 'linux-aarch64')
    needs:
      - setup-profiler-test
      - build-profiler

    name: ${{ matrix.test-config.name }} (${{ inputs.platform }}, ${{ inputs.target-device }}, ${{ inputs.network }})

    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.setup-profiler-test.outputs.matrix)}}

    uses:
      nv-legate/legate-gh-ci/.github/workflows/gh-test-without-container.yml@v1.39
    with:
      build-has-tests: true
      client-repo: ${{ github.event.repository.name }}
      client-ref: ${{ inputs.ref-sha }}
      build-type: ${{ inputs.build-type }}
      name: "${{ matrix.test-config.name }} (${{ matrix.runner.device }})"
      target-device: ${{ inputs.target-device }}
      runs-on: ${{ matrix.runner.name }}
      has-gpu: ${{ matrix.runner.type == 'gpu' }}
      test-options: ${{ matrix.test-config.test-scope }}
      platform: ${{ matrix.runner.platform }}
      legate-gh-ci-tag: "v1.39"
      build-mode: release
      python-version: ${{ inputs.python-version }}
      network: ${{ inputs.network }}
      setup-python-proxy-cache: ${{ matrix.runner.setup-python-proxy-cache }}
      enable-core-dumps: false
      profiler-artifact-name: ${{ needs.build-profiler.outputs.artifact-name }}
      output-build-type: "profiler-output-${{ matrix.runner.device }}"
      timeout: 90
    secrets: inherit
