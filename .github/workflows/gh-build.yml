name: Build legate.core on GH

on:
  workflow_call:
    inputs:
      build-target:
        required: true
        type: string
      runs-on:
        required: true
        type: string
      sha:
        required: true
        type: string

env:
  IMAGE_NAME: legate.core-${{ inputs.build-target }}
  USE_CUDA: ${{ (inputs.build-target == 'cpu' && 'OFF') || 'ON' }}

jobs:
  build:
    name: build-${{ inputs.build-target }}-sub-workflow

    permissions:
      id-token: write # This is required for configure-aws-credentials
      contents: read  # This is required for actions/checkout
      packages: write # This is required to push docker image to ghcr.io

    runs-on: ${{ inputs.runs-on }}

    steps:
      - name: Checkout legate.core (= this repo)
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.sha }}
          fetch-depth: 0

      - if: github.repository_owner == 'nv-legate'
        name: Get AWS credentials for sccache bucket
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-2
          role-duration-seconds: 28800 # 8 hours
          role-to-assume: arn:aws:iam::279114543810:role/gha-oidc-nv-legate

      - name: Build docker image
        run: |
          echo BUILD_TARGET: ${{ inputs.build-target }}
          echo USE_CUDA: ${USE_CUDA}

          mkdir .creds;

          cat <<< "${AWS_ACCESS_KEY_ID}" > .creds/AWS_ACCESS_KEY_ID;
          cat <<< "${AWS_SESSION_TOKEN}" > .creds/AWS_SESSION_TOKEN;
          cat <<< "${AWS_SECRET_ACCESS_KEY}" > .creds/AWS_SECRET_ACCESS_KEY;
          cat <<< "${{ secrets.PERSONAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}" > .creds/GH_TOKEN;

          docker build \
            --network host \
            --progress=plain \
            --build-arg USE_CUDA="${USE_CUDA}" \
            --build-arg AWS_REGION="${AWS_REGION}" \
            --build-arg AWS_DEFAULT_REGION="${AWS_DEFAULT_REGION}" \
            --secret "id=GH_TOKEN,src=$(pwd)/.creds/GH_TOKEN" \
            --secret "id=AWS_ACCESS_KEY_ID,src=$(pwd)/.creds/AWS_ACCESS_KEY_ID" \
            --secret "id=AWS_SESSION_TOKEN,src=$(pwd)/.creds/AWS_SESSION_TOKEN" \
            --secret "id=AWS_SECRET_ACCESS_KEY,src=$(pwd)/.creds/AWS_SECRET_ACCESS_KEY" \
            --tag=$IMAGE_NAME:${{ inputs.sha }} \
            --label "git-commit=${{ inputs.sha }}" \
            -f continuous_integration/Dockerfile \
            .

          rm -rf .creds;

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          VERSION=${{ inputs.sha }}

          docker tag $IMAGE_NAME:$VERSION $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: Copy artifacts back to the host
        run: |
          mkdir -p artifacts
          docker run  -v "$(pwd)/artifacts:/artifacts" --rm -t -u coder \
            $IMAGE_NAME:${{ inputs.sha }} cp -ar ~/.artifacts/* /artifacts
          echo --------- DOCKER HISTORY START -----------
          docker history $IMAGE_NAME:${{ inputs.sha }}
          echo --------- DOCKER HISTORY END -----------

      - name: Display structure of workdir
        run: ls -R

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "legate.core-${{ inputs.build-target }}-${{ inputs.sha }}"
          path: artifacts
