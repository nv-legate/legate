on:
  workflow_call:
    inputs:
      platform:
        type: string
        required: true
      target-device:
        type: string
        required: true
      build-mode:
        type: string
        required: true
      ucx-enabled:
        type: boolean
        required: true
      build-type:
        type: string
        required: true
      upload-enabled:
        type: boolean
        required: true
      python-version:
        type: string
        required: false
jobs:
  build:
    if: ${{ github.repository_owner == 'nv-legate' }}
    uses:
      nv-legate/legate-gh-ci/.github/workflows/gh-build.yml@v1.9
    with:
      client-repo: ${{ github.event.repository.name }}
      target-device: ${{ inputs.target-device }}
      runs-on: ${{ (inputs.platform == 'linux' && 'linux-amd64-cpu16') || (inputs.platform == 'linux-aarch64' && 'linux-arm64-cpu16') || (inputs.platform == 'mac' && 'macos-latest') }}
      build-type: ${{ inputs.build-type }}
      use-container: ${{ inputs.platform == 'linux' || inputs.platform == 'linux-aarch64'}}
      platform: ${{ inputs.platform }}
      dependencies-file: ""
      dependencies-workflow: ""
      legate-gh-ci-tag: "v1.9"
      build-mode: ${{ inputs.build-mode }}
      ucx-enabled: ${{ inputs.ucx-enabled }}
      upload-enabled: ${{ inputs.upload-enabled }}
      python-version: ${{ inputs.python-version }}
    secrets: inherit

  upload:
    needs: build
    if: ${{ github.repository_owner == 'nv-legate' && contains(github.workflow, 'Nightly') && inputs.upload-enabled == true }}
    name: Upload package to Server
    uses:
      nv-legate/legate-gh-ci/.github/workflows/gh-upload.yml@v1.9
    with:
      client-repo: ${{ github.event.repository.name }}
      build-type: ${{ inputs.build-type }}
      name: uploadToURM
      target-device: ${{ inputs.target-device }}
      platform: ${{ inputs.platform }}
      legate-gh-ci-tag: "v1.9"
      build-mode: ${{ inputs.build-mode }}
      ucx-enabled: ${{ inputs.ucx-enabled }}
      upload-enabled: ${{ inputs.upload-enabled }}
      upload-action: "upload-package"
      pkgSubString: "legate-core"
      repos-Root: "legate_core"
      python-version: ${{ inputs.python-version }}
    secrets: inherit

  setup-test:
    name: Setup test
    if: inputs.upload-enabled == false
    needs:
      - build
    runs-on: linux-amd64-cpu4
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          set -xeuo pipefail
          MATRIX_JSON='{"include": ['
          RUNNERS=('linux-amd64-gpu-v100-latest-1:gpu:linux' 'linux-amd64-2gpu:gpu:linux' 'linux-amd64-cpu8:cpu:linux' 'macos-latest:cpu:mac' 'linux-arm64-cpu16:cpu:linux-aarch64' 'linux-aarch64-2gpu:gpu:linux-aarch64')
          TEST_CONFIGS=('Python Unit Tests:python' 'C++ Unit Tests:cpp')

          for RUNNER in "${RUNNERS[@]}"; do
            IFS=':' read -ra RUNNER_INFO <<< "$RUNNER"
            RUNNER_NAME=${RUNNER_INFO[0]}
            TARGET_DEVICE=${RUNNER_INFO[1]}
            RUNNER_PLATFORM=${RUNNER_INFO[2]}

            if [[ "$TARGET_DEVICE" == "${{ inputs.target-device }}" && "$RUNNER_PLATFORM" == "${{ inputs.platform }}" ]]; then
              for TEST_CONFIG in "${TEST_CONFIGS[@]}"; do
                IFS=':' read -ra CONFIG_INFO <<< "$TEST_CONFIG"
                CONFIG_NAME=${CONFIG_INFO[0]}
                CONFIG_SCOPE=${CONFIG_INFO[1]}

                MATRIX_JSON+="{\"runner\": {\"name\": \"$RUNNER_NAME\", \"type\": \"$TARGET_DEVICE\", \"platform\": \"$RUNNER_PLATFORM\"}, \"test-config\": {\"name\": \"$CONFIG_NAME\", \"test-scope\": \"$CONFIG_SCOPE\"}},"
              done
            fi
          done

          MATRIX_JSON=$(echo "$MATRIX_JSON" | sed 's/,$//') # Remove the trailing comma
          MATRIX_JSON+=']}'
          echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT

  test-within-container:
    if: github.repository_owner == 'nv-legate' && (inputs.platform == 'linux' || inputs.platform == 'linux-aarch64')
    needs:
      - setup-test

    name: ${{ matrix.test-config.name }} (${{ inputs.platform }}, ${{ inputs.target-device }}, ${{ inputs.build-mode }}, UCX=${{ inputs.ucx-enabled }})

    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.setup-test.outputs.matrix)}}

    uses:
      nv-legate/legate-gh-ci/.github/workflows/gh-test-within-container.yml@v1.9
    with:
      client-repo: ${{ github.event.repository.name }}
      build-type: ${{ inputs.build-type }}
      name: ${{ matrix.test-config.name }}
      target-device: ${{ inputs.target-device }}
      runs-on: ${{ matrix.runner.name }}
      has-gpu: ${{ matrix.runner.type == 'gpu' }}
      test-options: ${{ matrix.test-config.test-scope }}
      platform: ${{ matrix.runner.platform }}
      legate-gh-ci-tag: "v1.9"
      build-mode: ${{ inputs.build-mode }}
      ucx-enabled: ${{ inputs.ucx-enabled }}
      upload-enabled: ${{ inputs.upload-enabled }}
      python-version: ${{ inputs.python-version }}
    secrets: inherit


  test-without-container:
    if: github.repository_owner == 'nv-legate' && (inputs.platform != 'linux' && inputs.platform != 'linux-aarch64')
    needs:
      - setup-test

    name: ${{ matrix.test-config.name }} (${{ inputs.platform }}, ${{ inputs.target-device }}, ${{ inputs.build-mode }}, UCX=${{ inputs.ucx-enabled }})

    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.setup-test.outputs.matrix)}}

    uses:
      nv-legate/legate-gh-ci/.github/workflows/gh-test-without-container.yml@v1.9
    with:
      client-repo: ${{ github.event.repository.name }}
      build-type: ${{ inputs.build-type }}
      name: ${{ matrix.test-config.name }}
      target-device: ${{ inputs.target-device }}
      runs-on: ${{ matrix.runner.name }}
      has-gpu: ${{ matrix.runner.type == 'gpu' }}
      test-options: ${{ matrix.test-config.test-scope }}
      platform: ${{ matrix.runner.platform }}
      legate-gh-ci-tag: "v1.9"
      build-mode: ${{ inputs.build-mode }}
      ucx-enabled: ${{ inputs.ucx-enabled }}
      upload-enabled: ${{ inputs.upload-enabled }}
      python-version: ${{ inputs.python-version }}
    secrets: inherit

  updateTestStatus:
    needs: test-within-container
    name: Update Test status on Server
    if: ${{ github.repository_owner == 'nv-legate' && contains(github.workflow, 'Nightly') }}
    uses:
      nv-legate/legate-gh-ci/.github/workflows/gh-upload.yml@v1.9
    with:
      client-repo: ${{ github.event.repository.name }}
      build-type: ${{ inputs.build-type }}
      name: UpdateTestStatus
      target-device: ${{ inputs.target-device }}
      platform: ${{ inputs.platform }}
      legate-gh-ci-tag: "v1.9"
      build-mode: ${{ inputs.build-mode }}
      ucx-enabled: ${{ inputs.ucx-enabled }}
      upload-enabled: true
      upload-action: "update-test-status"
      pkgSubString: "legate-core"
      repos-Root: "legate_core"
      python-version: ${{ inputs.python-version }}
    secrets: inherit
