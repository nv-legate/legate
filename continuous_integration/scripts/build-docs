#!/usr/bin/env bash

set_repo_dir() {
    # Resolve the directory of the script
    SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

    # Navigate to the parent of the parent of SCRIPT_DIR, then get the full path
    REPO_DIR="$(cd "$SCRIPT_DIR/../.." && pwd)"

    export REPO_DIR
    export ARTIFACTS_DIR="${REPO_DIR}/.artifacts"
    export PATH="${PATH}:${REPO_DIR}/continuous_integration/scripts"
}

copy_artifacts() {
    echo Copying artifacts
    cp -r $REPO_DIR/docs/legate/core/build/html/* "$ARTIFACTS_DIR/."
}

build_docs() {
    set -xeuo pipefail

    set_repo_dir
 
    echo "Generate YAML file listing dependencies"
    $REPO_DIR/scripts/generate-conda-envs.py --python 3.10 --ctk 12.0 --os linux --compilers --openmpi

    echo "Install dependencies from generated YAML file"
    conda env create -n legate -f environment-test-linux-py3.10-cuda12.0-compilers-openmpi.yaml

    echo "Build doxygen documentation through install.py"
    conda run -n legate /bin/bash -c "./install.py --docs"

    echo "Build documentation using Makefile"
    cd $REPO_DIR/docs/legate/core
    conda run -n legate /bin/bash -c "make html"

    echo "Run link checker"
    cd $REPO_DIR/docs/legate/core
    conda run -n legate /bin/bash -c "make linkcheck"

    copy_artifacts
}

(build_docs "$@");