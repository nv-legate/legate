..
  SPDX-FileCopyrightText: Copyright (c) 2022-2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
  SPDX-License-Identifier: Apache-2.0

Changes: 25.08
==============
..
   STYLE:
   * Capitalize sentences.
   * Use the imperative tense: Add, Improve, Change, etc.
   * Use a period (.) at the end of entries.
   * Be concise yet informative.
   * If possible, provide an executive summary of the new feature, but do not
     just repeat its doc string. However, if the feature requires changes from
     the user, then describe those changes in detail, and provide examples of
     the changes required.


.. rubric:: General

C++
---

.. rubric:: General


- Add experimental support for "streaming", a new execution model that tracks task
  dependencies at a more granular level, allowing individual leaf task dependencies to be
  immediately executed before waiting for the preceding task to be scheduled.

  Tasks may be marked as streaming by enclosing them in a ``legate::Scope``:

  .. code-block:: cpp

     {
       const auto scope = legate::Scope{legate::ParallelPolicy{}.with_streaming(true)};

       launch_task_A();
       launch_task_B();
       launch_task_C();
     }

  This feature is experimental and does not yet support all use-cases. Invalid use may
  lead to exceptions, hangs, or outright crashes. Users are invited to try out this
  feature while development continues.

.. rubric:: Data

- Add ``PhysicalStore::span_read_accessor()``, ``PhysicalStore::span_write_accessor()``,
  ``PhysicalStore::span_read_write_accessor()``, and
  ``PhysicalStore::span_reduce_accessor()`` which return ``cuda::std::mdspan``'s as
  alternatives to the usual accessor interfaces.
- Add ``legate::PhysicalStore::to_dlpack()`` to export the store in DLPack format.

.. rubric:: Mapping

- Remove ``legate::mapping::InstLayout``. Support for ``AOS`` never really worked, only
  ``SOA``. Since this causes the entire enum to have just a single value, it is
  removed. All stores will have ``SOA`` layout.
- Remove ``legate::mapping::InstanceMappingPolicy::layout`` as a result of removing
  ``InstLayout``.
- Remove ``legate::mapping::InstanceMappingPolicy::with_instance_layout()`` as a result of
  removing ``InstLayout``.
- Remove ``legate::mapping::InstanceMappingPolicy::set_instance_layout()`` as a result of
  removing ``InstLayout``.

.. rubric:: Partitioning

.. rubric:: Tasks

- Add ``legate::AutoTask::add_constraints()`` to add multiple constraints to a task.

.. rubric:: Tuning

.. rubric:: Types

.. rubric:: Runtime

.. rubric:: Utilities

- Add ``legate::flatten()`` helper function, to allow users to construct a flat view over
  a ``cuda::std::mdspan``.
- Add ``legate::for_each_in_extent()`` helper function to allow users to efficiently
  iterate over an N-dimensional extent space.
- Add ``legate::Span(const legate::tuple<T>&)`` to construct a ``legate::Span`` from a
  ``legate::tuple``.
- Add ``legate::Span::empty()`` to check whether a span's size is 0.
- Add ``legate::Span::at()``, to access an element with bounds checking.
- Add ``legate::Span::deep_equal()`` to do a "deep", pointwise equality comparison.
- Remove ``legate::print_dense_array()``. This header used CUDA runtime symbols which
  Legate no longer directly links against, and therefore could not reliably
  provide. Downstream users should either use the span accessors of physical stores (which
  support easy dimension-aware iteration for printing), or implement this utility
  themselves.
- Remove the ``legate/utilities/debug.h`` header.

.. rubric:: I/O


Python
------

.. rubric:: General

- Add ``legate.core.from_dlpack()`` to enable importing DLPack compatible tensors as
  ``legate.core.LogicalStore``.

.. rubric:: Data

- Add ``legate.core.PhysicalStore.__dlpack__()`` and
  ``legate.core.PhysicalStore.__dlpack_device__()`` to support exporting physical stores
  as DLPack capsules.

.. rubric:: Mapping

.. rubric:: Partitioning

.. rubric:: Tasks

.. rubric:: Tuning

.. rubric:: Types

.. rubric:: Runtime

.. rubric:: Utilities

.. rubric:: I/O
